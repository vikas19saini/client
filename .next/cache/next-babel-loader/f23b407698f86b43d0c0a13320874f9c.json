{"ast":null,"code":"import { useCookies } from 'react-cookie';\nimport axios from \"axios\";\nexport function getProductPrice(product) {\n  const [currency] = useCookies(['currency']);\n\n  if (product.salePrice !== 0) {\n    return parseFloat((product.salePrice * currency.currency.value).toFixed(2));\n  }\n\n  return parseFloat((product.ragularPrice * currency.currency.value).toFixed(2));\n}\nexport function formatPrice(price) {\n  const [currency, setCurrency] = useCookies(['currency']);\n  let c = axios.get(`${process.env.API_URL}static/config`).then(res => console.log(res.data));\n  /* console.log(c)\r\n  c = c.filter(cu => c.value === 1)\r\n  setCurrency(c[0]) */\n\n  /* price = parseFloat((price * currency.currency.value).toFixed(2))\r\n  return new Intl.NumberFormat('en-IN', { style: \"currency\", currency: currency.currency.code }).format(price) */\n}\nexport function getPriceHtml(product) {\n  if (product.salePrice === 0) {\n    return formatPrice(product.ragularPrice);\n  }\n\n  return `${formatPrice(product.salePrice)} <del>${formatPrice(product.ragularPrice)}</del>`;\n}","map":{"version":3,"sources":["D:/Projects/client/src/pages/helpers.js"],"names":["useCookies","axios","getProductPrice","product","currency","salePrice","parseFloat","value","toFixed","ragularPrice","formatPrice","price","setCurrency","c","get","process","env","API_URL","then","res","console","log","data","getPriceHtml"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkC;AACrC,QAAM,CAACC,QAAD,IAAaJ,UAAU,CAAC,CAAC,UAAD,CAAD,CAA7B;;AAEA,MAAIG,OAAO,CAACE,SAAR,KAAsB,CAA1B,EAA6B;AACzB,WAAOC,UAAU,CAAC,CAACH,OAAO,CAACE,SAAR,GAAoBD,QAAQ,CAACA,QAAT,CAAkBG,KAAvC,EAA8CC,OAA9C,CAAsD,CAAtD,CAAD,CAAjB;AACH;;AAED,SAAOF,UAAU,CAAC,CAACH,OAAO,CAACM,YAAR,GAAuBL,QAAQ,CAACA,QAAT,CAAkBG,KAA1C,EAAiDC,OAAjD,CAAyD,CAAzD,CAAD,CAAjB;AACH;AAED,OAAO,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC/B,QAAM,CAACP,QAAD,EAAWQ,WAAX,IAA0BZ,UAAU,CAAC,CAAC,UAAD,CAAD,CAA1C;AAEA,MAAIa,CAAC,GAAGZ,KAAK,CAACa,GAAN,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,OAAQ,eAAjC,EAAiDC,IAAjD,CAAuDC,GAAD,IAAQC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAA9D,CAAR;AAEA;AACJ;AACA;;AAEI;AACJ;AACC;AAED,OAAO,SAASC,YAAT,CAAsBpB,OAAtB,EAA+B;AAClC,MAAIA,OAAO,CAACE,SAAR,KAAsB,CAA1B,EAA6B;AACzB,WAAOK,WAAW,CAACP,OAAO,CAACM,YAAT,CAAlB;AACH;;AAED,SAAQ,GAAEC,WAAW,CAACP,OAAO,CAACE,SAAT,CAAoB,SAAQK,WAAW,CAACP,OAAO,CAACM,YAAT,CAAuB,QAAnF;AACH","sourcesContent":["import { useCookies } from 'react-cookie';\r\nimport axios from \"axios\"\r\n\r\nexport function getProductPrice(product) {\r\n    const [currency] = useCookies(['currency']);\r\n\r\n    if (product.salePrice !== 0) {\r\n        return parseFloat((product.salePrice * currency.currency.value).toFixed(2))\r\n    }\r\n\r\n    return parseFloat((product.ragularPrice * currency.currency.value).toFixed(2))\r\n}\r\n\r\nexport function formatPrice(price) {\r\n    const [currency, setCurrency] = useCookies(['currency']);\r\n\r\n    let c = axios.get(`${process.env.API_URL}static/config`).then((res) =>console.log(res.data))\r\n    \r\n    /* console.log(c)\r\n    c = c.filter(cu => c.value === 1)\r\n    setCurrency(c[0]) */\r\n\r\n    /* price = parseFloat((price * currency.currency.value).toFixed(2))\r\n    return new Intl.NumberFormat('en-IN', { style: \"currency\", currency: currency.currency.code }).format(price) */\r\n}\r\n\r\nexport function getPriceHtml(product) {\r\n    if (product.salePrice === 0) {\r\n        return formatPrice(product.ragularPrice)\r\n    }\r\n\r\n    return `${formatPrice(product.salePrice)} <del>${formatPrice(product.ragularPrice)}</del>`\r\n}"]},"metadata":{},"sourceType":"module"}