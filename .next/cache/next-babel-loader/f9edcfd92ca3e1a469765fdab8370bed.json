{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\cartButon.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from 'react-nextjs-toast';\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function CartButton(props) {\n  _s();\n\n  var product = props.product;\n\n  var _useState = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity),\n      qty = _useState[0],\n      setQty = _useState[1];\n\n  var _useState2 = useState(product.minOrderQuantity ? product.minOrderQuantity : 1),\n      minQty = _useState2[0];\n\n  var _useState3 = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200),\n      maxQty = _useState3[0];\n\n  var _useState4 = useState(product.step ? product.step : 1),\n      step = _useState4[0];\n\n  var config = useSelector(function (state) {\n    return state.config;\n  });\n  var dispatch = useDispatch();\n\n  var setQuantity = function setQuantity(val) {\n    /* if (val < minQty) {\r\n        toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n            type: \"error\",\r\n            title: \"Quantity Error!!!\"\r\n        })\r\n          return;\r\n    }\r\n      if (val > maxQty) {\r\n        toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n            type: \"error\",\r\n            title: \"Quantity Error!!!\"\r\n        })\r\n          return;\r\n    } */\n    val = parseFloat(val);\n    setQty(parseFloat(val.toFixed(2)));\n  };\n\n  var addProductToCart = function addProductToCart() {\n    if (qty < minQty) {\n      toast.notify(\"Invalid quantity, min order quantity is : \".concat(minQty), {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else if (qty > maxQty) {\n      toast.notify(\"Invalid quantity, max order quantity is : \".concat(maxQty), {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else {\n      var item = {\n        id: product.id,\n        quantity: qty,\n        slug: product.slug\n      };\n      var cartData = [];\n\n      if (config.cart) {\n        cartData = config.cart.filter(function (ci) {\n          return ci.id !== product.id;\n        });\n      }\n\n      cartData.push(item);\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cartData\n      });\n      toast.notify(\"Added to cart\", {\n        type: \"success\",\n        title: \"Success!!!\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), props.iscartpage ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"class\": \"check_qu_1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          \"class\": \"number-input md-number-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onclick: \"this.parentNode.querySelector('input[type=number]').stepDown()\",\n            \"class\": \"minus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"quantity\",\n            min: \"1\",\n            value: qty,\n            onChange: function onChange(e) {\n              return setQuantity(e.target.value);\n            },\n            name: \"quantity\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onclick: \"this.parentNode.querySelector('input[type=number]').stepUp()\",\n            \"class\": \"plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [product.stockStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"minus\",\n          onClick: function onClick() {\n            return setQuantity(qty - step);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"quantity\",\n          min: \"1\",\n          value: qty,\n          onChange: function onChange(e) {\n            return setQuantity(e.target.value);\n          },\n          name: \"quantity\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus\",\n          onClick: function onClick() {\n            return setQuantity(qty + step);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 56\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Out of Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }, this), product.stockStatus !== 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bag_bttn\",\n          onClick: addProductToCart,\n          children: \"Add to Bag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hard_icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-heart\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartButton, \"2EBWxctDFnjiLVLIbPXJHsBJ0eM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartButton\");","map":{"version":3,"sources":["D:/Projects/client/src/components/cartButon.js"],"names":["Fragment","useEffect","useState","toast","ToastContainer","useSelector","useDispatch","CartButton","props","product","quantity","minOrderQuantity","qty","setQty","minQty","maxOrderQuantity","maxQty","step","config","state","dispatch","setQuantity","val","parseFloat","toFixed","addProductToCart","notify","type","title","item","id","slug","cartData","cart","filter","ci","push","payload","iscartpage","e","target","value","stockStatus"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from 'react-nextjs-toast'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nexport default function CartButton(props) {\r\n    const product = props.product\r\n    const [qty, setQty] = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity)\r\n    const [minQty] = useState(product.minOrderQuantity ? product.minOrderQuantity : 1)\r\n    const [maxQty] = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200)\r\n    const [step] = useState(product.step ? product.step : 1)\r\n\r\n    let config = useSelector(state => state.config);\r\n    const dispatch = useDispatch()\r\n\r\n    const setQuantity = (val) => {\r\n\r\n        /* if (val < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if (val > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        } */\r\n\r\n        val = parseFloat(val)\r\n        setQty(parseFloat(val.toFixed(2)))\r\n    }\r\n\r\n    const addProductToCart = () => {\r\n        if (qty < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else if (qty > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else {\r\n            let item = { id: product.id, quantity: qty, slug: product.slug }\r\n            let cartData = []\r\n            if (config.cart) {\r\n                cartData = config.cart.filter(ci => ci.id !== product.id)\r\n            }\r\n\r\n            cartData.push(item)\r\n\r\n            dispatch({ type: \"ADD_TO_CART\", payload: cartData })\r\n            toast.notify(`Added to cart`, {\r\n                type: \"success\",\r\n                title: \"Success!!!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            {\r\n                props.iscartpage ?\r\n                    (<Fragment>\r\n                        <div class=\"check_qu_1\">\r\n                            <div class=\"number-input md-number-input\">\r\n                                <p>Quantity</p>\r\n                                <button onclick=\"this.parentNode.querySelector('input[type=number]').stepDown()\"\r\n                                    class=\"minus\"></button>\r\n                                <input className=\"quantity\" min=\"1\" value={qty} onChange={(e) => setQuantity(e.target.value)} name=\"quantity\" type=\"number\" />\r\n                                <button onclick=\"this.parentNode.querySelector('input[type=number]').stepUp()\" class=\"plus\"></button>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>)\r\n                    : (\r\n                        <Fragment>\r\n                            {\r\n                                product.stockStatus ? (<div className=\"number-input md-number-input\" key={product.id}>\r\n                                    <p>Quantity</p>\r\n                                    <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                    <input className=\"quantity\" min=\"1\" value={qty} onChange={(e) => setQuantity(e.target.value)} name=\"quantity\" type=\"number\" />\r\n                                    <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                </div>) : (\r\n                                        <div className=\"number-input md-number-input\">\r\n                                            <h2>Out of Stock</h2>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n                            {\r\n                                product.stockStatus !== 0 &&\r\n                                <Fragment>\r\n                                    <button type=\"button\" className=\"bag_bttn\" onClick={addProductToCart}>Add to Bag</button>\r\n                                    <button className=\"hard_icon\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\r\n                                </Fragment>\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n            }\r\n        </Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}