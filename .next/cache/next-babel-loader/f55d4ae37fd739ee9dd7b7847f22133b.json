{"ast":null,"code":"import _defineProperty from \"D:/Projects/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { SET_CURRENCY } from \"../actions/configActions\";\n\nvar configReducer = function configReducer(state, action) {\n  switch (action.type) {\n    case HYDRATE:\n      var nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n      return nextState;\n\n    case SET_CURRENCY:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default configReducer;","map":{"version":3,"sources":["D:/Projects/client/src/redux/reducers/configReducer.js"],"names":["HYDRATE","SET_CURRENCY","configReducer","state","action","type","nextState","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,OAAL;AACI,UAAMM,SAAS,mCACRH,KADQ,GAERC,MAAM,CAACG,OAFC,CAAf;;AAIA,aAAOD,SAAP;;AACJ,SAAKL,YAAL;AACI,+BAAYE,KAAZ;;AACJ;AACI,+BAAYA,KAAZ;AAVR;AAaH,CAdD;;AAgBA,eAAeD,aAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\"\r\nimport { SET_CURRENCY } from \"../actions/configActions\"\r\n\r\nconst configReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case HYDRATE:\r\n            const nextState = {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n            return nextState\r\n        case SET_CURRENCY:\r\n            return { ...state }\r\n        default:\r\n            return { ...state }\r\n    }\r\n\r\n}\r\n\r\nexport default configReducer"]},"metadata":{},"sourceType":"module"}