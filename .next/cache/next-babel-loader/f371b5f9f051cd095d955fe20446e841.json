{"ast":null,"code":"import { useStore } from \"react-redux\";\n/* export function getProductPrice(product) {\r\n    const [config] = useStore().getState();\r\n\r\n    if (product.salePrice !== 0) {\r\n        return parseFloat((product.salePrice * config.currency.value).toFixed(2))\r\n    }\r\n\r\n    return parseFloat((product.ragularPrice * config.currency.value).toFixed(2))\r\n}\r\n\r\nexport async function formatPrice(price) {\r\n    const [config] = useStore().getState();\r\n    price = parseFloat((price * config.currency.value).toFixed(2))\r\n    return new Intl.NumberFormat('en-IN', { style: \"currency\", currency: config.currency.code }).format(price)\r\n} */\n\nexport function getPriceHtml(product) {\n  if (product.salePrice === 0) {\n    return formatPrice(product.ragularPrice);\n  }\n\n  return `${formatPrice(product.salePrice)} <del>${formatPrice(product.ragularPrice)}</del>`;\n}","map":{"version":3,"sources":["D:/Projects/client/src/pages/helpers.js"],"names":["useStore","getPriceHtml","product","salePrice","formatPrice","ragularPrice"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAClC,MAAIA,OAAO,CAACC,SAAR,KAAsB,CAA1B,EAA6B;AACzB,WAAOC,WAAW,CAACF,OAAO,CAACG,YAAT,CAAlB;AACH;;AAED,SAAQ,GAAED,WAAW,CAACF,OAAO,CAACC,SAAT,CAAoB,SAAQC,WAAW,CAACF,OAAO,CAACG,YAAT,CAAuB,QAAnF;AACH","sourcesContent":["import { useStore } from \"react-redux\";\r\n\r\n\r\n/* export function getProductPrice(product) {\r\n    const [config] = useStore().getState();\r\n\r\n    if (product.salePrice !== 0) {\r\n        return parseFloat((product.salePrice * config.currency.value).toFixed(2))\r\n    }\r\n\r\n    return parseFloat((product.ragularPrice * config.currency.value).toFixed(2))\r\n}\r\n\r\nexport async function formatPrice(price) {\r\n    const [config] = useStore().getState();\r\n    price = parseFloat((price * config.currency.value).toFixed(2))\r\n    return new Intl.NumberFormat('en-IN', { style: \"currency\", currency: config.currency.code }).format(price)\r\n} */\r\n\r\nexport function getPriceHtml(product) {\r\n    if (product.salePrice === 0) {\r\n        return formatPrice(product.ragularPrice)\r\n    }\r\n\r\n    return `${formatPrice(product.salePrice)} <del>${formatPrice(product.ragularPrice)}</del>`\r\n}"]},"metadata":{},"sourceType":"module"}