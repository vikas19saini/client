{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\cartButon.js\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from 'react-nextjs-toast';\nimport { useSelector, useDispatch } from \"react-redux\";\nexport default function CartButton(props) {\n  const product = props.product;\n  const {\n    0: qty,\n    1: setQty\n  } = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity);\n  const {\n    0: minQty\n  } = useState(product.minOrderQuantity ? product.minOrderQuantity : 1);\n  const {\n    0: maxQty\n  } = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200);\n  const {\n    0: step\n  } = useState(product.step ? product.step : 1);\n  let config = useSelector(state => state.config);\n  const dispatch = useDispatch();\n\n  const setQuantity = val => {\n    /* if (val < minQty) {\r\n        toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n            type: \"error\",\r\n            title: \"Quantity Error!!!\"\r\n        })\r\n          return;\r\n    }\r\n      if (val > maxQty) {\r\n        toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n            type: \"error\",\r\n            title: \"Quantity Error!!!\"\r\n        })\r\n          return;\r\n    } */\n    val = parseFloat(val);\n    setQty(parseFloat(val.toFixed(2)));\n  };\n\n  const addProductToCart = () => {\n    if (qty < minQty) {\n      toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else if (qty > maxQty) {\n      toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else {\n      let item = {\n        id: product.id,\n        quantity: qty,\n        slug: product.slug\n      };\n      let cartData = [];\n\n      if (config.cart) {\n        cartData = config.cart.filter(ci => ci.id !== product.id);\n      }\n\n      cartData.push(item);\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cartData\n      });\n      toast.notify(`Added to cart`, {\n        type: \"success\",\n        title: \"Success!!!\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), props.iscartpage && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"check_qu_1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"number-input md-number-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onclick: \"this.parentNode.querySelector('input[type=number]').stepDown()\",\n            class: \"minus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"quantity\",\n            min: cp.minOrderQuantity,\n            name: \"quantity\",\n            defaultValue: cp.quantity,\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onclick: \"this.parentNode.querySelector('input[type=number]').stepUp()\",\n            class: \"plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), \"(\", product.stockStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-input md-number-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"minus\",\n        onClick: () => setQuantity(qty - step)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"quantity\",\n        min: \"1\",\n        value: qty,\n        onChange: e => setQuantity(e.target.value),\n        name: \"quantity\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"plus\",\n        onClick: () => setQuantity(qty + step)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, product.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-input md-number-input\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Out of Stock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }, this), product.stockStatus !== 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bag_bttn\",\n        onClick: addProductToCart,\n        children: \"Add to Bag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hard_icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-heart\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projects/client/src/components/cartButon.js"],"names":["Fragment","useEffect","useState","toast","ToastContainer","useSelector","useDispatch","CartButton","props","product","qty","setQty","quantity","minOrderQuantity","minQty","maxQty","maxOrderQuantity","step","config","state","dispatch","setQuantity","val","parseFloat","toFixed","addProductToCart","notify","type","title","item","id","slug","cartData","cart","filter","ci","push","payload","iscartpage","cp","stockStatus","e","target","value"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from 'react-nextjs-toast'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nexport default function CartButton(props) {\r\n    const product = props.product\r\n    const [qty, setQty] = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity)\r\n    const [minQty] = useState(product.minOrderQuantity ? product.minOrderQuantity : 1)\r\n    const [maxQty] = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200)\r\n    const [step] = useState(product.step ? product.step : 1)\r\n\r\n    let config = useSelector(state => state.config);\r\n    const dispatch = useDispatch()\r\n\r\n    const setQuantity = (val) => {\r\n\r\n        /* if (val < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if (val > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        } */\r\n\r\n        val = parseFloat(val)\r\n        setQty(parseFloat(val.toFixed(2)))\r\n    }\r\n\r\n    const addProductToCart = () => {\r\n        if (qty < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else if (qty > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else {\r\n            let item = { id: product.id, quantity: qty, slug: product.slug }\r\n            let cartData = []\r\n            if (config.cart) {\r\n                cartData = config.cart.filter(ci => ci.id !== product.id)\r\n            }\r\n\r\n            cartData.push(item)\r\n\r\n            dispatch({ type: \"ADD_TO_CART\", payload: cartData })\r\n            toast.notify(`Added to cart`, {\r\n                type: \"success\",\r\n                title: \"Success!!!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            {\r\n                props.iscartpage &&\r\n                <Fragment>\r\n                    <div class=\"check_qu_1\">\r\n                        <div class=\"number-input md-number-input\">\r\n                            <p>Quantity</p>\r\n                            <button onclick=\"this.parentNode.querySelector('input[type=number]').stepDown()\"\r\n                                class=\"minus\"></button>\r\n                            <input class=\"quantity\" min={cp.minOrderQuantity} name=\"quantity\" defaultValue={cp.quantity} type=\"number\" />\r\n                            <button onclick=\"this.parentNode.querySelector('input[type=number]').stepUp()\"\r\n                                class=\"plus\"></button>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            }\r\n\r\n            ({\r\n                product.stockStatus ? (<div className=\"number-input md-number-input\" key={product.id}>\r\n                    <p>Quantity</p>\r\n                    <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                    <input className=\"quantity\" min=\"1\" value={qty} onChange={(e) => setQuantity(e.target.value)} name=\"quantity\" type=\"number\" />\r\n                    <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                </div>) : (\r\n                        <div className=\"number-input md-number-input\">\r\n                            <h2>Out of Stock</h2>\r\n                        </div>\r\n                    )\r\n            }\r\n            {\r\n                product.stockStatus !== 0 &&\r\n                <Fragment>\r\n                    <button type=\"button\" className=\"bag_bttn\" onClick={addProductToCart}>Add to Bag</button>\r\n                    <button className=\"hard_icon\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\r\n                </Fragment>\r\n            })\r\n        </Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}