{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\cartButon.js\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from 'react-nextjs-toast';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { stockStatus } from \"../pages/helpers\";\nimport axios from \"axios\";\nexport default function CartButton(props) {\n  const product = props.product;\n  const cart = useSelector(state => state.config.cart ? state.config.cart : []);\n  const dispatch = useDispatch();\n  const {\n    0: qty,\n    1: setQty\n  } = useState(props.product.cartQuantity ? props.product.cartQuantity : props.product.minOrderQuantity);\n  const {\n    0: minQty\n  } = useState(product.minOrderQuantity ? product.minOrderQuantity : 1);\n  const {\n    0: maxQty\n  } = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200);\n  const {\n    0: step\n  } = useState(product.step ? product.step : 1);\n\n  const setQuantity = val => {\n    if (val < minQty) {\n      toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n      return;\n    }\n\n    if (val > maxQty) {\n      toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n      return;\n    }\n\n    val = parseFloat(val.toFixed(2));\n    setQty(val);\n  };\n\n  useEffect(() => {\n    if (props.iscartpage) {\n      addProductToCart();\n    }\n  }, [qty]);\n\n  const addProductToCart = () => {\n    if (qty < minQty) {\n      toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else if (qty > maxQty) {\n      toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else {\n      let item = {\n        id: product.id,\n        quantity: qty,\n        slug: product.slug\n      };\n      let cartData = [...cart];\n      let productsInCartIds = cartData.map(cid => cid.id);\n\n      if (productsInCartIds.includes(item.id)) {\n        let index = productsInCartIds.indexOf(item.id);\n        cartData[index].quantity = item.quantity;\n      } else {\n        cartData.push(item);\n      }\n\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cartData\n      });\n      toast.notify(`${props.iscartpage ? \"Cart updated\" : \"Added to cart\"}`, {\n        type: \"success\",\n        title: \"Success!!!\"\n      });\n      props.iscartpage && props.setReload(props.reload + 1);\n    }\n  };\n\n  const addToWishlist = () => {\n    axios.post(`${process.env.API_URL}wishlist`, {\n      productId: product.id\n    }).then(res => {\n      toast.notify(`${res.data.message}`, {\n        type: \"success\",\n        title: \"Wishlist!\"\n      });\n    }).catch(err => {\n      toast.notify(`Something went wrong!`, {\n        type: \"error\",\n        title: \"Wishlist!\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), props.iscartpage ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_qu_1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-input md-number-input\",\n          children: stockStatus(product) ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"minus\",\n              onClick: () => setQuantity(qty - step)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quantity\",\n              value: qty,\n              onChange: e => setQuantity(e.target.value),\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"plus\",\n              onClick: () => setQuantity(qty + step)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"number-input md-number-input\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Out of Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [stockStatus(product) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"minus\",\n          onClick: () => setQuantity(qty - step)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"quantity\",\n          value: qty,\n          onChange: e => setQuantity(e.target.value),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus\",\n          onClick: () => setQuantity(qty + step)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 57\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Out of Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }, this), product.stockStatus !== 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bag_bttn\",\n          onClick: addProductToCart,\n          children: \"Add to Bag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hard_icon\",\n          onClick: addToWishlist,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-heart\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 91\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projects/client/src/components/cartButon.js"],"names":["Fragment","useEffect","useState","toast","ToastContainer","useSelector","useDispatch","stockStatus","axios","CartButton","props","product","cart","state","config","dispatch","qty","setQty","cartQuantity","minOrderQuantity","minQty","maxQty","maxOrderQuantity","step","setQuantity","val","notify","type","title","parseFloat","toFixed","iscartpage","addProductToCart","item","id","quantity","slug","cartData","productsInCartIds","map","cid","includes","index","indexOf","push","payload","setReload","reload","addToWishlist","post","process","env","API_URL","productId","then","res","data","message","catch","err","e","target","value"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from 'react-nextjs-toast';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { stockStatus } from \"../pages/helpers\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CartButton(props) {\r\n    const product = props.product\r\n    const cart = useSelector(state => state.config.cart ? state.config.cart : []);\r\n    const dispatch = useDispatch()\r\n    const [qty, setQty] = useState(props.product.cartQuantity ? props.product.cartQuantity : props.product.minOrderQuantity)\r\n    const [minQty] = useState(product.minOrderQuantity ? product.minOrderQuantity : 1)\r\n    const [maxQty] = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200)\r\n    const [step] = useState(product.step ? product.step : 1)\r\n\r\n    const setQuantity = (val) => {\r\n\r\n        if (val < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        if (val > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        val = parseFloat(val.toFixed(2))\r\n        setQty(val)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.iscartpage) {\r\n            addProductToCart()\r\n        }\r\n    }, [qty])\r\n\r\n    const addProductToCart = () => {\r\n        if (qty < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else if (qty > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else {\r\n            let item = { id: product.id, quantity: qty, slug: product.slug }\r\n            let cartData = [...cart]\r\n\r\n            let productsInCartIds = cartData.map(cid => cid.id)\r\n            if (productsInCartIds.includes(item.id)) {\r\n                let index = productsInCartIds.indexOf(item.id)\r\n                cartData[index].quantity = item.quantity\r\n            } else {\r\n                cartData.push(item)\r\n            }\r\n\r\n            dispatch({ type: \"ADD_TO_CART\", payload: cartData })\r\n\r\n            toast.notify(`${props.iscartpage ? \"Cart updated\" : \"Added to cart\"}`, {\r\n                type: \"success\",\r\n                title: \"Success!!!\"\r\n            })\r\n\r\n            props.iscartpage && props.setReload(props.reload + 1)\r\n        }\r\n    }\r\n\r\n    const addToWishlist = () => {\r\n        axios.post(`${process.env.API_URL}wishlist`, { productId: product.id }).then(res => {\r\n            toast.notify(`${res.data.message}`, {\r\n                type: \"success\",\r\n                title: \"Wishlist!\"\r\n            })\r\n        }).catch(err => {\r\n            toast.notify(`Something went wrong!`, {\r\n                type: \"error\",\r\n                title: \"Wishlist!\"\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            {\r\n                props.iscartpage ?\r\n                    (<Fragment>\r\n                        <div className=\"check_qu_1\">\r\n                            <div className=\"number-input md-number-input\">\r\n                                {\r\n                                    stockStatus(product) ?\r\n                                        <Fragment>\r\n                                            <p>Quantity</p>\r\n                                            <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                            <input className=\"quantity\" value={qty} onChange={(e) => setQuantity(e.target.value)} type=\"number\" />\r\n                                            <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                        </Fragment>\r\n                                        :\r\n                                        <Fragment>\r\n                                            <div className=\"number-input md-number-input\">\r\n                                                <h4>Out of Stock</h4>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>)\r\n                    : (\r\n                        <Fragment>\r\n                            {\r\n                                stockStatus(product) ? (<div className=\"number-input md-number-input\" key={product.id}>\r\n                                    <p>Quantity</p>\r\n                                    <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                    <input className=\"quantity\" value={qty} onChange={(e) => setQuantity(e.target.value)} type=\"number\" />\r\n                                    <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                </div>) : (\r\n                                        <div className=\"number-input md-number-input\">\r\n                                            <h2>Out of Stock</h2>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n                            {\r\n                                product.stockStatus !== 0 &&\r\n                                <Fragment>\r\n                                    <button type=\"button\" className=\"bag_bttn\" onClick={addProductToCart}>Add to Bag</button>\r\n                                    <button className=\"hard_icon\" onClick={addToWishlist}><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\r\n                                </Fragment>\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n            }\r\n        </Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}