{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\paycard\\\\components\\\\card\\\\index.js\";\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { CSSTransition, TransitionGroup, SwitchTransition } from 'react-transition-group';\nconst CARDS = {\n  visa: '^4',\n  amex: '^(34|37)',\n  mastercard: '^5[1-5]',\n  discover: '^6011',\n  unionpay: '^62',\n  troy: '^9792',\n  diners: '^(30[0-5]|36)'\n};\n\nconst cardBackgroundName = () => {\n  let random = Math.floor(Math.random() * 25 + 1);\n  return `${random}.jpeg`;\n};\n\nconst BACKGROUND_IMG = cardBackgroundName();\n\nconst Card = ({\n  cardHolder,\n  cardNumber,\n  cardMonth,\n  cardYear,\n  cardCvv,\n  isCardFlipped,\n  currentFocusedElm,\n  onCardElementClick,\n  cardNumberRef,\n  cardHolderRef,\n  cardDateRef\n}) => {\n  const {\n    0: style,\n    1: setStyle\n  } = useState(null);\n\n  const cardType = cardNumber => {\n    const number = cardNumber;\n    let re;\n\n    for (const [card, pattern] of Object.entries(CARDS)) {\n      re = new RegExp(pattern);\n\n      if (number.match(re) != null) {\n        return card;\n      }\n    }\n\n    return 'visa'; // default type\n  };\n\n  const useCardType = useMemo(() => {\n    return cardType(cardNumber);\n  }, [cardNumber]);\n\n  const outlineElementStyle = element => {\n    return element ? {\n      width: `${element.offsetWidth}px`,\n      height: `${element.offsetHeight}px`,\n      transform: `translateX(${element.offsetLeft}px) translateY(${element.offsetTop}px)`\n    } : null;\n  };\n\n  useEffect(() => {\n    if (currentFocusedElm) {\n      const style = outlineElementStyle(currentFocusedElm.current);\n      setStyle(style);\n    }\n  }, [currentFocusedElm]);\n\n  const maskCardNumber = cardNumber => {\n    let cardNumberArr = cardNumber.split('');\n    cardNumberArr.forEach((val, index) => {\n      if (index > 4 && index < 14) {\n        if (cardNumberArr[index] !== ' ') {\n          cardNumberArr[index] = '*';\n        }\n      }\n    });\n    return cardNumberArr;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'card-item ' + (isCardFlipped ? '-active' : ''),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-item__side -front\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `card-item__focus ${currentFocusedElm ? `-active` : ``}`,\n        style: style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item__cover\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: `/card-background/${BACKGROUND_IMG}`,\n          className: \"card-item__bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item__top\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: '/chip.png',\n            alt: \"\",\n            className: \"card-item__chip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-item__type\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: useCardType,\n              src: `/card-type/${useCardType}.png`,\n              className: \"card-item__typeImg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"card-item__number\",\n          ref: cardNumberRef,\n          onClick: () => onCardElementClick('cardNumber'),\n          children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n            className: \"slide-fade-up\",\n            component: \"div\",\n            children: cardNumber ? maskCardNumber(cardNumber).map((val, index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n              classNames: \"slide-fade-up\",\n              timeout: 250,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-item__numberItem\",\n                children: val\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(CSSTransition, {\n              classNames: \"slide-fade-up\",\n              timeout: 250,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-item__numberItem\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"card-item__info\",\n            onClick: () => onCardElementClick('cardHolder'),\n            ref: cardHolderRef,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-item__holder\",\n              children: \"Card Holder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-item__name\",\n              children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n                component: \"div\",\n                className: \"slide-fade-up\",\n                children: cardHolder === 'FULL NAME' ? /*#__PURE__*/_jsxDEV(CSSTransition, {\n                  classNames: \"slide-fade-up\",\n                  timeout: 250,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"FULL NAME\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this) : cardHolder.split('').map((val, index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n                  timeout: 250,\n                  classNames: \"slide-fade-right\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"card-item__nameItem\",\n                    children: val\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 53\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-item__date\",\n            onClick: () => onCardElementClick('cardDate'),\n            ref: cardDateRef,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"card-item__dateTitle\",\n              children: \"Expires\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"card-item__dateItem\",\n              children: /*#__PURE__*/_jsxDEV(SwitchTransition, {\n                \"in-out\": true,\n                children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n                  classNames: \"slide-fade-up\",\n                  timeout: 200,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [!cardMonth ? 'MM' : cardMonth, ' ']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 41\n                  }, this)\n                }, cardMonth, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), \"/\", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cardYear\",\n              className: \"card-item__dateItem\",\n              children: /*#__PURE__*/_jsxDEV(SwitchTransition, {\n                \"out-in\": true,\n                children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n                  classNames: \"slide-fade-up\",\n                  timeout: 250,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: !cardYear ? 'YY' : cardYear.toString().substr(-2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this)\n                }, cardYear, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-item__side -back\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item__cover\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"\",\n          src: `/card-background/${BACKGROUND_IMG}`,\n          className: \"card-item__bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item__band\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-item__cvv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item__cvvTitle\",\n          children: \"CVV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item__cvvBand\",\n          children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n            children: cardCvv.split('').map((val, index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n              classNames: \"zoom-in-out\",\n              timeout: 250,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-item__type\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"card-type\",\n            src: '/card-type/visa.png',\n            className: \"card-item__typeImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Card;","map":{"version":3,"sources":["D:/Projects/client/src/components/paycard/components/card/index.js"],"names":["React","useState","useEffect","useCallback","useMemo","CSSTransition","TransitionGroup","SwitchTransition","CARDS","visa","amex","mastercard","discover","unionpay","troy","diners","cardBackgroundName","random","Math","floor","BACKGROUND_IMG","Card","cardHolder","cardNumber","cardMonth","cardYear","cardCvv","isCardFlipped","currentFocusedElm","onCardElementClick","cardNumberRef","cardHolderRef","cardDateRef","style","setStyle","cardType","number","re","card","pattern","Object","entries","RegExp","match","useCardType","outlineElementStyle","element","width","offsetWidth","height","offsetHeight","transform","offsetLeft","offsetTop","current","maskCardNumber","cardNumberArr","split","forEach","val","index","map","toString","substr"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,OAAlD,QAAiE,OAAjE;AACA,SACIC,aADJ,EAEIC,eAFJ,EAGIC,gBAHJ,QAIO,wBAJP;AAMA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,IADI;AAEVC,EAAAA,IAAI,EAAE,UAFI;AAGVC,EAAAA,UAAU,EAAE,SAHF;AAIVC,EAAAA,QAAQ,EAAE,OAJA;AAKVC,EAAAA,QAAQ,EAAE,KALA;AAMVC,EAAAA,IAAI,EAAE,OANI;AAOVC,EAAAA,MAAM,EAAE;AAPE,CAAd;;AAUA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAAhB,GAAqB,CAAhC,CAAb;AACA,SAAQ,GAAEA,MAAO,OAAjB;AACH,CAHD;;AAKA,MAAMG,cAAc,GAAGJ,kBAAkB,EAAzC;;AAEA,MAAMK,IAAI,GAAG,CAAC;AACVC,EAAAA,UADU;AAEVC,EAAAA,UAFU;AAGVC,EAAAA,SAHU;AAIVC,EAAAA,QAJU;AAKVC,EAAAA,OALU;AAMVC,EAAAA,aANU;AAOVC,EAAAA,iBAPU;AAQVC,EAAAA,kBARU;AASVC,EAAAA,aATU;AAUVC,EAAAA,aAVU;AAWVC,EAAAA;AAXU,CAAD,KAYP;AACF,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBjC,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMkC,QAAQ,GAAIZ,UAAD,IAAgB;AAC7B,UAAMa,MAAM,GAAGb,UAAf;AACA,QAAIc,EAAJ;;AACA,SAAK,MAAM,CAACC,IAAD,EAAOC,OAAP,CAAX,IAA8BC,MAAM,CAACC,OAAP,CAAejC,KAAf,CAA9B,EAAqD;AACjD6B,MAAAA,EAAE,GAAG,IAAIK,MAAJ,CAAWH,OAAX,CAAL;;AACA,UAAIH,MAAM,CAACO,KAAP,CAAaN,EAAb,KAAoB,IAAxB,EAA8B;AAC1B,eAAOC,IAAP;AACH;AACJ;;AAED,WAAO,MAAP,CAV6B,CAUd;AAClB,GAXD;;AAaA,QAAMM,WAAW,GAAGxC,OAAO,CAAC,MAAM;AAC9B,WAAO+B,QAAQ,CAACZ,UAAD,CAAf;AACH,GAF0B,EAExB,CAACA,UAAD,CAFwB,CAA3B;;AAIA,QAAMsB,mBAAmB,GAAIC,OAAD,IAAa;AACrC,WAAOA,OAAO,GACR;AACIC,MAAAA,KAAK,EAAG,GAAED,OAAO,CAACE,WAAY,IADlC;AAEIC,MAAAA,MAAM,EAAG,GAAEH,OAAO,CAACI,YAAa,IAFpC;AAGIC,MAAAA,SAAS,EAAG,cAAaL,OAAO,CAACM,UAAW,kBAAiBN,OAAO,CAACO,SAAU;AAHnF,KADQ,GAMR,IANN;AAOH,GARD;;AAUAnD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0B,iBAAJ,EAAuB;AACnB,YAAMK,KAAK,GAAGY,mBAAmB,CAACjB,iBAAiB,CAAC0B,OAAnB,CAAjC;AACApB,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GALQ,EAKN,CAACL,iBAAD,CALM,CAAT;;AAOA,QAAM2B,cAAc,GAAIhC,UAAD,IAAgB;AACnC,QAAIiC,aAAa,GAAGjC,UAAU,CAACkC,KAAX,CAAiB,EAAjB,CAApB;AACAD,IAAAA,aAAa,CAACE,OAAd,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAClC,UAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;AACzB,YAAIJ,aAAa,CAACI,KAAD,CAAb,KAAyB,GAA7B,EAAkC;AAC9BJ,UAAAA,aAAa,CAACI,KAAD,CAAb,GAAuB,GAAvB;AACH;AACJ;AACJ,KAND;AAQA,WAAOJ,aAAP;AACH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAE,gBAAgB7B,aAAa,GAAG,SAAH,GAAe,EAA5C,CAAhB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,oBACRC,iBAAiB,GAAI,SAAJ,GAAgB,EACpC,EAHL;AAII,QAAA,KAAK,EAAEK;AAJX;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AACI,UAAA,GAAG,EAAC,EADR;AAEI,UAAA,GAAG,EAAG,oBAAmBb,cAAe,EAF5C;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAeI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AACI,YAAA,GAAG,EAAE,WADT;AAEI,YAAA,GAAG,EAAC,EAFR;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACI;AACI,cAAA,GAAG,EAAEwB,WADT;AAEI,cAAA,GAAG,EAAG,cAAaA,WAAY,MAFnC;AAGI,cAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI;AACI,UAAA,SAAS,EAAC,mBADd;AAEI,UAAA,GAAG,EAAEd,aAFT;AAGI,UAAA,OAAO,EAAE,MAAMD,kBAAkB,CAAC,YAAD,CAHrC;AAAA,iCAKI,QAAC,eAAD;AACI,YAAA,SAAS,EAAC,eADd;AAEI,YAAA,SAAS,EAAC,KAFd;AAAA,sBAIKN,UAAU,GACPgC,cAAc,CAAChC,UAAD,CAAd,CAA2BsC,GAA3B,CAA+B,CAACF,GAAD,EAAMC,KAAN,kBAC3B,QAAC,aAAD;AACI,cAAA,UAAU,EAAC,eADf;AAEI,cAAA,OAAO,EAAE,GAFb;AAAA,qCAKI;AAAK,gBAAA,SAAS,EAAC,uBAAf;AAAA,0BACKD;AADL;AAAA;AAAA;AAAA;AAAA;AALJ,eAGSC,KAHT;AAAA;AAAA;AAAA;AAAA,oBADJ,CADO,gBAaP,QAAC,aAAD;AACI,cAAA,UAAU,EAAC,eADf;AAEI,cAAA,OAAO,EAAE,GAFb;AAAA,qCAII;AAAK,gBAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAiDI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACI;AACI,YAAA,SAAS,EAAC,iBADd;AAEI,YAAA,OAAO,EAAE,MAAM/B,kBAAkB,CAAC,YAAD,CAFrC;AAGI,YAAA,GAAG,EAAEE,aAHT;AAAA,oCAKI;AAAK,cAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAK,cAAA,SAAS,EAAC,iBAAf;AAAA,qCACI,QAAC,eAAD;AACI,gBAAA,SAAS,EAAC,KADd;AAEI,gBAAA,SAAS,EAAC,eAFd;AAAA,0BAIKT,UAAU,KAAK,WAAf,gBACG,QAAC,aAAD;AACI,kBAAA,UAAU,EAAC,eADf;AAEI,kBAAA,OAAO,EAAE,GAFb;AAAA,yCAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,wBADH,GAQGA,UAAU,CACLmC,KADL,CACW,EADX,EAEKI,GAFL,CAES,CAACF,GAAD,EAAMC,KAAN,kBACD,QAAC,aAAD;AACI,kBAAA,OAAO,EAAE,GADb;AAEI,kBAAA,UAAU,EAAC,kBAFf;AAAA,yCAKI;AAAM,oBAAA,SAAS,EAAC,qBAAhB;AAAA,8BACKD;AADL;AAAA;AAAA;AAAA;AAAA;AALJ,mBAGSC,KAHT;AAAA;AAAA;AAAA;AAAA,wBAHR;AAZR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAqCI;AACI,YAAA,SAAS,EAAC,iBADd;AAEI,YAAA,OAAO,EAAE,MAAM/B,kBAAkB,CAAC,UAAD,CAFrC;AAGI,YAAA,GAAG,EAAEG,WAHT;AAAA,oCAKI;AAAO,cAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAQI;AAAO,cAAA,SAAS,EAAC,qBAAjB;AAAA,qCACI,QAAC,gBAAD;AAAkB,8BAAlB;AAAA,uCACI,QAAC,aAAD;AACI,kBAAA,UAAU,EAAC,eADf;AAEI,kBAAA,OAAO,EAAE,GAFb;AAAA,yCAKI;AAAA,+BACK,CAACR,SAAD,GAAa,IAAb,GAAoBA,SADzB,EACoC,GADpC;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,mBAGSA,SAHT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBARJ,oBAsBI;AACI,cAAA,OAAO,EAAC,UADZ;AAEI,cAAA,SAAS,EAAC,qBAFd;AAAA,qCAII,QAAC,gBAAD;AAAkB,8BAAlB;AAAA,uCACI,QAAC,aAAD;AACI,kBAAA,UAAU,EAAC,eADf;AAEI,kBAAA,OAAO,EAAE,GAFb;AAAA,yCAKI;AAAA,8BACK,CAACC,QAAD,GACK,IADL,GAEKA,QAAQ,CACHqC,QADL,GAEKC,MAFL,CAEY,CAAC,CAFb;AAHV;AAAA;AAAA;AAAA;AAAA;AALJ,mBAGStC,QAHT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,oBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAqJI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI;AACI,UAAA,GAAG,EAAC,EADR;AAEI,UAAA,GAAG,EAAG,oBAAmBL,cAAe,EAF5C;AAGI,UAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI,QAAC,eAAD;AAAA,sBACKM,OAAO,CAAC+B,KAAR,CAAc,EAAd,EAAkBI,GAAlB,CAAsB,CAACF,GAAD,EAAMC,KAAN,kBACnB,QAAC,aAAD;AACI,cAAA,UAAU,EAAC,aADf;AAGI,cAAA,OAAO,EAAE,GAHb;AAAA,qCAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,eAESA,KAFT;AAAA;AAAA;AAAA;AAAA,oBADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAeI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACI;AACI,YAAA,GAAG,EAAC,WADR;AAEI,YAAA,GAAG,EAAE,qBAFT;AAGI,YAAA,SAAS,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyLH,CAvPD;;AAyPA,eAAevC,IAAf","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport {\n    CSSTransition,\n    TransitionGroup,\n    SwitchTransition\n} from 'react-transition-group';\n\nconst CARDS = {\n    visa: '^4',\n    amex: '^(34|37)',\n    mastercard: '^5[1-5]',\n    discover: '^6011',\n    unionpay: '^62',\n    troy: '^9792',\n    diners: '^(30[0-5]|36)'\n};\n\nconst cardBackgroundName = () => {\n    let random = Math.floor(Math.random() * 25 + 1);\n    return `${random}.jpeg`;\n};\n\nconst BACKGROUND_IMG = cardBackgroundName();\n\nconst Card = ({\n    cardHolder,\n    cardNumber,\n    cardMonth,\n    cardYear,\n    cardCvv,\n    isCardFlipped,\n    currentFocusedElm,\n    onCardElementClick,\n    cardNumberRef,\n    cardHolderRef,\n    cardDateRef\n}) => {\n    const [style, setStyle] = useState(null);\n\n    const cardType = (cardNumber) => {\n        const number = cardNumber;\n        let re;\n        for (const [card, pattern] of Object.entries(CARDS)) {\n            re = new RegExp(pattern);\n            if (number.match(re) != null) {\n                return card;\n            }\n        }\n\n        return 'visa'; // default type\n    };\n\n    const useCardType = useMemo(() => {\n        return cardType(cardNumber);\n    }, [cardNumber]);\n\n    const outlineElementStyle = (element) => {\n        return element\n            ? {\n                  width: `${element.offsetWidth}px`,\n                  height: `${element.offsetHeight}px`,\n                  transform: `translateX(${element.offsetLeft}px) translateY(${element.offsetTop}px)`\n              }\n            : null;\n    };\n\n    useEffect(() => {\n        if (currentFocusedElm) {\n            const style = outlineElementStyle(currentFocusedElm.current);\n            setStyle(style);\n        }\n    }, [currentFocusedElm]);\n\n    const maskCardNumber = (cardNumber) => {\n        let cardNumberArr = cardNumber.split('');\n        cardNumberArr.forEach((val, index) => {\n            if (index > 4 && index < 14) {\n                if (cardNumberArr[index] !== ' ') {\n                    cardNumberArr[index] = '*';\n                }\n            }\n        });\n\n        return cardNumberArr;\n    };\n\n    return (\n        <div className={'card-item ' + (isCardFlipped ? '-active' : '')}>\n            <div className=\"card-item__side -front\">\n                <div\n                    className={`card-item__focus ${\n                        currentFocusedElm ? `-active` : ``\n                    }`}\n                    style={style}\n                />\n                <div className=\"card-item__cover\">\n                    <img\n                        alt=\"\"\n                        src={`/card-background/${BACKGROUND_IMG}`}\n                        className=\"card-item__bg\"\n                    />\n                </div>\n\n                <div className=\"card-item__wrapper\">\n                    <div className=\"card-item__top\">\n                        <img\n                            src={'/chip.png'}\n                            alt=\"\"\n                            className=\"card-item__chip\"\n                        />\n                        <div className=\"card-item__type\">\n                            <img\n                                alt={useCardType}\n                                src={`/card-type/${useCardType}.png`}\n                                className=\"card-item__typeImg\"\n                            />\n                        </div>\n                    </div>\n\n                    <label\n                        className=\"card-item__number\"\n                        ref={cardNumberRef}\n                        onClick={() => onCardElementClick('cardNumber')}\n                    >\n                        <TransitionGroup\n                            className=\"slide-fade-up\"\n                            component=\"div\"\n                        >\n                            {cardNumber ? (\n                                maskCardNumber(cardNumber).map((val, index) => (\n                                    <CSSTransition\n                                        classNames=\"slide-fade-up\"\n                                        timeout={250}\n                                        key={index}\n                                    >\n                                        <div className=\"card-item__numberItem\">\n                                            {val}\n                                        </div>\n                                    </CSSTransition>\n                                ))\n                            ) : (\n                                <CSSTransition\n                                    classNames=\"slide-fade-up\"\n                                    timeout={250}\n                                >\n                                    <div className=\"card-item__numberItem\">\n                                        #\n                                    </div>\n                                </CSSTransition>\n                            )}\n                        </TransitionGroup>\n                    </label>\n                    <div className=\"card-item__content\">\n                        <label\n                            className=\"card-item__info\"\n                            onClick={() => onCardElementClick('cardHolder')}\n                            ref={cardHolderRef}\n                        >\n                            <div className=\"card-item__holder\">Card Holder</div>\n                            <div className=\"card-item__name\">\n                                <TransitionGroup\n                                    component=\"div\"\n                                    className=\"slide-fade-up\"\n                                >\n                                    {cardHolder === 'FULL NAME' ? (\n                                        <CSSTransition\n                                            classNames=\"slide-fade-up\"\n                                            timeout={250}\n                                        >\n                                            <div>FULL NAME</div>\n                                        </CSSTransition>\n                                    ) : (\n                                        cardHolder\n                                            .split('')\n                                            .map((val, index) => (\n                                                <CSSTransition\n                                                    timeout={250}\n                                                    classNames=\"slide-fade-right\"\n                                                    key={index}\n                                                >\n                                                    <span className=\"card-item__nameItem\">\n                                                        {val}\n                                                    </span>\n                                                </CSSTransition>\n                                            ))\n                                    )}\n                                </TransitionGroup>\n                            </div>\n                        </label>\n                        <div\n                            className=\"card-item__date\"\n                            onClick={() => onCardElementClick('cardDate')}\n                            ref={cardDateRef}\n                        >\n                            <label className=\"card-item__dateTitle\">\n                                Expires\n                            </label>\n                            <label className=\"card-item__dateItem\">\n                                <SwitchTransition in-out>\n                                    <CSSTransition\n                                        classNames=\"slide-fade-up\"\n                                        timeout={200}\n                                        key={cardMonth}\n                                    >\n                                        <span>\n                                            {!cardMonth ? 'MM' : cardMonth}{' '}\n                                        </span>\n                                    </CSSTransition>\n                                </SwitchTransition>\n                            </label>\n                            /\n                            <label\n                                htmlFor=\"cardYear\"\n                                className=\"card-item__dateItem\"\n                            >\n                                <SwitchTransition out-in>\n                                    <CSSTransition\n                                        classNames=\"slide-fade-up\"\n                                        timeout={250}\n                                        key={cardYear}\n                                    >\n                                        <span>\n                                            {!cardYear\n                                                ? 'YY'\n                                                : cardYear\n                                                      .toString()\n                                                      .substr(-2)}\n                                        </span>\n                                    </CSSTransition>\n                                </SwitchTransition>\n                            </label>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"card-item__side -back\">\n                <div className=\"card-item__cover\">\n                    <img\n                        alt=\"\"\n                        src={`/card-background/${BACKGROUND_IMG}`}\n                        className=\"card-item__bg\"\n                    />\n                </div>\n                <div className=\"card-item__band\" />\n                <div className=\"card-item__cvv\">\n                    <div className=\"card-item__cvvTitle\">CVV</div>\n                    <div className=\"card-item__cvvBand\">\n                        <TransitionGroup>\n                            {cardCvv.split('').map((val, index) => (\n                                <CSSTransition\n                                    classNames=\"zoom-in-out\"\n                                    key={index}\n                                    timeout={250}\n                                >\n                                    <span>*</span>\n                                </CSSTransition>\n                            ))}\n                        </TransitionGroup>\n                    </div>\n                    <div className=\"card-item__type\">\n                        <img\n                            alt=\"card-type\"\n                            src={'/card-type/visa.png'}\n                            className=\"card-item__typeImg\"\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}