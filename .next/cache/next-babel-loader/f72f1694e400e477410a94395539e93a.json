{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\cartButon.js\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from 'react-nextjs-toast';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { stockStatus } from \"../pages/helpers\";\nexport default function CartButton(props) {\n  const product = props.product;\n  const {\n    0: qty,\n    1: setQty\n  } = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity);\n  const {\n    0: minQty\n  } = useState(product.minOrderQuantity ? product.minOrderQuantity : 1);\n  const {\n    0: maxQty\n  } = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200);\n  const {\n    0: step\n  } = useState(product.step ? product.step : 1);\n  let cart = useSelector(state => state.config.cart ? state.config.cart : []);\n  const dispatch = useDispatch();\n\n  const setQuantity = val => {\n    val = parseFloat(val.toFixed(2));\n    setQty(val);\n\n    if (props.iscartpage) {\n      addProductToCart();\n    }\n  };\n\n  const addProductToCart = () => {\n    if (qty < minQty) {\n      toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else if (qty > maxQty) {\n      toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else {\n      let item = {\n        id: product.id,\n        quantity: qty,\n        slug: product.slug\n      };\n      let cartData = [...cart];\n      let productsInCartIds = cartData.map(cid => cid.id);\n\n      if (productsInCartIds.includes(item.id)) {\n        let index = productsInCartIds.indexOf(item.id);\n        cartData[index].quantity = item.quantity;\n        console.log(item.quantity);\n        console.log(cartData[index]);\n      } else {\n        cartData.push(item);\n      }\n\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cartData\n      });\n      toast.notify(`${props.iscartpage ? \"Cart updated\" : \"Added to cart\"}`, {\n        type: \"success\",\n        title: \"Success!!!\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), props.iscartpage ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_qu_1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-input md-number-input\",\n          children: stockStatus(product) ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"minus\",\n              onClick: () => setQuantity(qty - step)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quantity\",\n              value: qty,\n              onChange: e => setQuantity(e.target.value),\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"plus\",\n              onClick: () => setQuantity(qty + step)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"number-input md-number-input\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Out of Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [stockStatus(product) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"minus\",\n          onClick: () => setQuantity(qty - step)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"quantity\",\n          value: qty,\n          onChange: e => setQuantity(e.target.value),\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus\",\n          onClick: () => setQuantity(qty + step)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 57\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Out of Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }, this), product.stockStatus !== 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bag_bttn\",\n          onClick: addProductToCart,\n          children: \"Add to Bag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hard_icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-heart\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projects/client/src/components/cartButon.js"],"names":["Fragment","useEffect","useState","toast","ToastContainer","useSelector","useDispatch","stockStatus","CartButton","props","product","qty","setQty","quantity","minOrderQuantity","minQty","maxQty","maxOrderQuantity","step","cart","state","config","dispatch","setQuantity","val","parseFloat","toFixed","iscartpage","addProductToCart","notify","type","title","item","id","slug","cartData","productsInCartIds","map","cid","includes","index","indexOf","console","log","push","payload","e","target","value"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from 'react-nextjs-toast'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { stockStatus } from \"../pages/helpers\"\r\n\r\nexport default function CartButton(props) {\r\n    const product = props.product\r\n    const [qty, setQty] = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity)\r\n    const [minQty] = useState(product.minOrderQuantity ? product.minOrderQuantity : 1)\r\n    const [maxQty] = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200)\r\n    const [step] = useState(product.step ? product.step : 1)\r\n\r\n    let cart = useSelector(state => state.config.cart ? state.config.cart : []);\r\n    const dispatch = useDispatch()\r\n\r\n    const setQuantity = (val) => {\r\n        val = parseFloat(val.toFixed(2))\r\n        setQty(val)\r\n\r\n        if (props.iscartpage) {\r\n            addProductToCart()\r\n        }\r\n    }\r\n\r\n    const addProductToCart = () => {\r\n        if (qty < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else if (qty > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else {\r\n            let item = { id: product.id, quantity: qty, slug: product.slug }\r\n            let cartData = [...cart]\r\n\r\n            let productsInCartIds = cartData.map(cid => cid.id)\r\n            if (productsInCartIds.includes(item.id)) {\r\n                let index = productsInCartIds.indexOf(item.id)\r\n                cartData[index].quantity = item.quantity\r\n                console.log(item.quantity)\r\n                console.log(cartData[index])\r\n            } else {\r\n                cartData.push(item)\r\n            }\r\n\r\n            dispatch({ type: \"ADD_TO_CART\", payload: cartData })\r\n\r\n            toast.notify(`${props.iscartpage ? \"Cart updated\" : \"Added to cart\"}`, {\r\n                type: \"success\",\r\n                title: \"Success!!!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            {\r\n                props.iscartpage ?\r\n                    (<Fragment>\r\n                        <div className=\"check_qu_1\">\r\n                            <div className=\"number-input md-number-input\">\r\n                                {\r\n                                    stockStatus(product) ?\r\n                                        <Fragment>\r\n                                            <p>Quantity</p>\r\n                                            <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                            <input className=\"quantity\" value={qty} onChange={(e) => setQuantity(e.target.value)} type=\"number\" />\r\n                                            <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                        </Fragment>\r\n                                        :\r\n                                        <Fragment>\r\n                                            <div className=\"number-input md-number-input\">\r\n                                                <h4>Out of Stock</h4>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>)\r\n                    : (\r\n                        <Fragment>\r\n                            {\r\n                                stockStatus(product) ? (<div className=\"number-input md-number-input\" key={product.id}>\r\n                                    <p>Quantity</p>\r\n                                    <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                    <input className=\"quantity\" value={qty} onChange={(e) => setQuantity(e.target.value)} type=\"number\" />\r\n                                    <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                </div>) : (\r\n                                        <div className=\"number-input md-number-input\">\r\n                                            <h2>Out of Stock</h2>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n                            {\r\n                                product.stockStatus !== 0 &&\r\n                                <Fragment>\r\n                                    <button type=\"button\" className=\"bag_bttn\" onClick={addProductToCart}>Add to Bag</button>\r\n                                    <button className=\"hard_icon\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\r\n                                </Fragment>\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n            }\r\n        </Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}