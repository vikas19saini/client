{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\cartButon.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from 'react-nextjs-toast';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { stockStatus } from \"../pages/helpers\";\nexport default function CartButton(props) {\n  _s();\n\n  var product = props.product;\n\n  var _useState = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity),\n      qty = _useState[0],\n      setQty = _useState[1];\n\n  var _useState2 = useState(product.minOrderQuantity ? product.minOrderQuantity : 1),\n      minQty = _useState2[0];\n\n  var _useState3 = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200),\n      maxQty = _useState3[0];\n\n  var _useState4 = useState(product.step ? product.step : 1),\n      step = _useState4[0];\n\n  var config = useSelector(function (state) {\n    return state.config;\n  });\n  var dispatch = useDispatch();\n\n  var setQuantity = function setQuantity(val) {\n    if (val < minQty) {\n      toast.notify(\"Invalid quantity, min order quantity is : \".concat(minQty), {\n        type: \"error\",\n        title: \"Quantity Error!!!\"\n      });\n      return;\n    }\n\n    if (val > maxQty) {\n      toast.notify(\"Invalid quantity, max order quantity is : \".concat(maxQty), {\n        type: \"error\",\n        title: \"Quantity Error!!!\"\n      });\n      return;\n    }\n\n    val = parseFloat(val);\n    setQty(parseFloat(val.toFixed(2)));\n\n    if (props.iscartpage) {\n      addProductToCart();\n    }\n  };\n\n  var addProductToCart = function addProductToCart() {\n    if (qty < minQty) {\n      toast.notify(\"Invalid quantity, min order quantity is : \".concat(minQty), {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else if (qty > maxQty) {\n      toast.notify(\"Invalid quantity, max order quantity is : \".concat(maxQty), {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else {\n      var item = {\n        id: product.id,\n        quantity: qty,\n        slug: product.slug\n      };\n      var cartData = config.cart ? config.cart : [];\n      var productsInCartIds = config.cart.map(function (cid) {\n        return cid.id;\n      });\n\n      if (productsInCartIds.includes(item.id)) {\n        var index = productsInCartIds.indexOf(item.id);\n        cartData[index].quantity = qty;\n      } else {\n        cartData.push(item);\n      }\n\n      console.log(cartData);\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cartData\n      });\n      toast.notify(\"\".concat(props.iscartpage ? \"Cart updated\" : \"Added to cart\"), {\n        type: \"success\",\n        title: \"Success!!!\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), props.iscartpage ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_qu_1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-input md-number-input\",\n          children: stockStatus(product) ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"minus\",\n              onClick: function onClick() {\n                return setQuantity(qty - step);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"quantity\",\n              value: qty,\n              onChange: function onChange(e) {\n                return setQuantity(e.target.value);\n              },\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"plus\",\n              onClick: function onClick() {\n                return setQuantity(qty + step);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"number-input md-number-input\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Out of Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [stockStatus(product) ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"minus\",\n          onClick: function onClick() {\n            return setQuantity(qty - step);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"quantity\",\n          value: qty,\n          onChange: function onChange(e) {\n            return setQuantity(e.target.value);\n          },\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus\",\n          onClick: function onClick() {\n            return setQuantity(qty + step);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 37\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 57\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Out of Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }, this), product.stockStatus !== 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bag_bttn\",\n          onClick: addProductToCart,\n          children: \"Add to Bag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hard_icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-heart\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartButton, \"2EBWxctDFnjiLVLIbPXJHsBJ0eM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartButton\");","map":{"version":3,"sources":["D:/Projects/client/src/components/cartButon.js"],"names":["Fragment","useEffect","useState","toast","ToastContainer","useSelector","useDispatch","stockStatus","CartButton","props","product","quantity","minOrderQuantity","qty","setQty","minQty","maxOrderQuantity","maxQty","step","config","state","dispatch","setQuantity","val","notify","type","title","parseFloat","toFixed","iscartpage","addProductToCart","item","id","slug","cartData","cart","productsInCartIds","map","cid","includes","index","indexOf","push","console","log","payload","e","target","value"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from 'react-nextjs-toast'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { stockStatus } from \"../pages/helpers\"\r\n\r\nexport default function CartButton(props) {\r\n    const product = props.product\r\n    const [qty, setQty] = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity)\r\n    const [minQty] = useState(product.minOrderQuantity ? product.minOrderQuantity : 1)\r\n    const [maxQty] = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200)\r\n    const [step] = useState(product.step ? product.step : 1)\r\n\r\n    let config = useSelector(state => state.config);\r\n    const dispatch = useDispatch()\r\n\r\n    const setQuantity = (val) => {\r\n\r\n        if (val < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if (val > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        val = parseFloat(val)\r\n        setQty(parseFloat(val.toFixed(2)))\r\n\r\n        if (props.iscartpage) {\r\n            addProductToCart()\r\n        }\r\n    }\r\n\r\n    const addProductToCart = () => {\r\n        if (qty < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else if (qty > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else {\r\n            let item = { id: product.id, quantity: qty, slug: product.slug }\r\n            let cartData = config.cart ? config.cart : []\r\n\r\n            let productsInCartIds = config.cart.map(cid => cid.id)\r\n            if (productsInCartIds.includes(item.id)) {\r\n                let index = productsInCartIds.indexOf(item.id)\r\n                cartData[index].quantity = qty\r\n            } else {\r\n                cartData.push(item)\r\n            }\r\n\r\n            console.log(cartData)\r\n\r\n            dispatch({ type: \"ADD_TO_CART\", payload: cartData })\r\n\r\n            toast.notify(`${props.iscartpage ? \"Cart updated\" : \"Added to cart\"}`, {\r\n                type: \"success\",\r\n                title: \"Success!!!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            {\r\n                props.iscartpage ?\r\n                    (<Fragment>\r\n                        <div className=\"check_qu_1\">\r\n                            <div className=\"number-input md-number-input\">\r\n                                {\r\n                                    stockStatus(product) ?\r\n                                        <Fragment>\r\n                                            <p>Quantity</p>\r\n                                            <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                            <input className=\"quantity\" value={qty} onChange={(e) => setQuantity(e.target.value)} type=\"number\" />\r\n                                            <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                        </Fragment>\r\n                                        :\r\n                                        <Fragment>\r\n                                            <div className=\"number-input md-number-input\">\r\n                                                <h4>Out of Stock</h4>\r\n                                            </div>\r\n                                        </Fragment>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>)\r\n                    : (\r\n                        <Fragment>\r\n                            {\r\n                                stockStatus(product) ? (<div className=\"number-input md-number-input\" key={product.id}>\r\n                                    <p>Quantity</p>\r\n                                    <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                    <input className=\"quantity\" value={qty} onChange={(e) => setQuantity(e.target.value)} type=\"number\" />\r\n                                    <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                </div>) : (\r\n                                        <div className=\"number-input md-number-input\">\r\n                                            <h2>Out of Stock</h2>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n                            {\r\n                                product.stockStatus !== 0 &&\r\n                                <Fragment>\r\n                                    <button type=\"button\" className=\"bag_bttn\" onClick={addProductToCart}>Add to Bag</button>\r\n                                    <button className=\"hard_icon\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\r\n                                </Fragment>\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n            }\r\n        </Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}