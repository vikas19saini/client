{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\pages\\\\category\\\\[slug].js\";\nimport Header from \"../header\";\nimport Footer from \"../footer\";\nimport { Fragment, useEffect } from \"react\";\nimport Head from \"next/head\";\nimport SubCategory from \"../../components/subCategory\";\nexport var __N_SSP = true;\nexport default function Category(category) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: category.metaTitle ? category.metaTitle : category.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: category.metaDescription ? category.metaDescription : category.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), category.descendents.length > 0 && /*#__PURE__*/_jsxDEV(SubCategory, {\n      category: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["D:/Projects/client/src/pages/category/[slug].js"],"names":["Header","Footer","Fragment","useEffect","Head","SubCategory","Category","category","metaTitle","name","metaDescription","description","descendents","length"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AAEvC,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,QAAQ,CAACC,SAAT,GAAqBD,QAAQ,CAACC,SAA9B,GAA0CD,QAAQ,CAACE;AAA3D;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,QAAQ,CAACG,eAAT,GAA2BH,QAAQ,CAACG,eAApC,GAAsDH,QAAQ,CAACI;AAAjG;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALJ,EAOQJ,QAAQ,CAACK,WAAT,CAAqBC,MAArB,GAA8B,CAA9B,iBACA,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEN;AAAvB;AAAA;AAAA;AAAA;AAAA,YARR,eAUI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;KAhBuBD,Q","sourcesContent":["import Header from \"../header\"\r\nimport Footer from \"../footer\"\r\nimport { Fragment, useEffect } from \"react\"\r\nimport { wrapper } from \"../../redux/store\"\r\nimport axios from \"axios\"\r\nimport Head from \"next/head\"\r\nimport SubCategory from \"../../components/subCategory\"\r\n\r\nexport default function Category(category) {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Head>\r\n                <title>{category.metaTitle ? category.metaTitle : category.name}</title>\r\n                <meta name=\"description\" content={category.metaDescription ? category.metaDescription : category.description} />\r\n            </Head>\r\n            <Header />\r\n            {\r\n                category.descendents.length > 0 &&\r\n                <SubCategory category={category} />\r\n            }\r\n            <Footer />\r\n        </Fragment >\r\n    );\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n    try {\r\n        let category = await axios.get(`${process.env.API_URL}category/${context.params.slug}`)\r\n        category = category.data;\r\n\r\n        return {\r\n            props: category\r\n        }\r\n    } catch (error) {\r\n        return {\r\n            notFound: true,\r\n        }\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}