{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\cartButon.js\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { toast, ToastContainer } from 'react-nextjs-toast';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { stockStatus } from \"../pages/helpers\";\nexport default function CartButton(props) {\n  const product = props.product;\n  const {\n    0: qty,\n    1: setQty\n  } = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity);\n  const {\n    0: minQty\n  } = useState(product.minOrderQuantity ? product.minOrderQuantity : 1);\n  const {\n    0: maxQty\n  } = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200);\n  const {\n    0: step\n  } = useState(product.step ? product.step : 1);\n  let config = useSelector(state => state.config);\n  const dispatch = useDispatch();\n\n  const setQuantity = val => {\n    /* if (val < minQty) {\r\n        toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n            type: \"error\",\r\n            title: \"Quantity Error!!!\"\r\n        })\r\n          return;\r\n    }\r\n      if (val > maxQty) {\r\n        toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n            type: \"error\",\r\n            title: \"Quantity Error!!!\"\r\n        })\r\n          return;\r\n    } */\n    val = parseFloat(val);\n    setQty(parseFloat(val.toFixed(2)));\n\n    if (props.iscartpage) {\n      addProductToCart();\n    }\n  };\n\n  const addProductToCart = () => {\n    if (qty < minQty) {\n      toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else if (qty > maxQty) {\n      toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\n        type: \"error\",\n        title: \"Error!!!\"\n      });\n    } else {\n      let item = {\n        id: product.id,\n        quantity: qty,\n        slug: product.slug\n      };\n      let cartData = [];\n\n      if (config.cart) {\n        let itemIncart = config.cart.filter(ci => ci.id === product.id);\n\n        if (itemIncart.length > 0) {\n          cartData = config.cart.map(ci => {\n            if (ci.id === product.id) {\n              ci.quantity = qty;\n              return ci;\n            }\n\n            return ci;\n          });\n        } else {\n          cartData.push(item);\n        }\n      } else {\n        cartData.push(item);\n      }\n\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cartData\n      });\n      toast.notify(`Added to cart`, {\n        type: \"success\",\n        title: \"Success!!!\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), props.iscartpage ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"check_qu_1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number-input md-number-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"minus\",\n            onClick: () => setQuantity(qty - step)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"quantity\",\n            min: \"1\",\n            value: qty,\n            onChange: e => setQuantity(e.target.value),\n            name: \"quantity\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"plus\",\n            onClick: () => setQuantity(qty + step)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [product.stockStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"minus\",\n          onClick: () => setQuantity(qty - step)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"quantity\",\n          min: \"1\",\n          value: qty,\n          onChange: e => setQuantity(e.target.value),\n          name: \"quantity\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"plus\",\n          onClick: () => setQuantity(qty + step)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 37\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 56\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"number-input md-number-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Out of Stock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }, this), product.stockStatus !== 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"bag_bttn\",\n          onClick: addProductToCart,\n          children: \"Add to Bag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hard_icon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-heart\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projects/client/src/components/cartButon.js"],"names":["Fragment","useEffect","useState","toast","ToastContainer","useSelector","useDispatch","stockStatus","CartButton","props","product","qty","setQty","quantity","minOrderQuantity","minQty","maxQty","maxOrderQuantity","step","config","state","dispatch","setQuantity","val","parseFloat","toFixed","iscartpage","addProductToCart","notify","type","title","item","id","slug","cartData","cart","itemIncart","filter","ci","length","map","push","payload","e","target","value"],"mappings":"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","sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport { toast, ToastContainer } from 'react-nextjs-toast'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {stockStatus} from \"../pages/helpers\"\r\n\r\nexport default function CartButton(props) {\r\n    const product = props.product\r\n    const [qty, setQty] = useState(props.product.quantity ? props.product.quantity : props.product.minOrderQuantity)\r\n    const [minQty] = useState(product.minOrderQuantity ? product.minOrderQuantity : 1)\r\n    const [maxQty] = useState(product.maxOrderQuantity ? product.maxOrderQuantity : 200)\r\n    const [step] = useState(product.step ? product.step : 1)\r\n\r\n    let config = useSelector(state => state.config);\r\n    const dispatch = useDispatch()\r\n\r\n    const setQuantity = (val) => {\r\n\r\n        /* if (val < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        }\r\n\r\n        if (val > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Quantity Error!!!\"\r\n            })\r\n\r\n            return;\r\n        } */\r\n\r\n        val = parseFloat(val)\r\n        setQty(parseFloat(val.toFixed(2)))\r\n\r\n        if (props.iscartpage) {\r\n            addProductToCart()\r\n        }\r\n    }\r\n\r\n    const addProductToCart = () => {\r\n        if (qty < minQty) {\r\n            toast.notify(`Invalid quantity, min order quantity is : ${minQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else if (qty > maxQty) {\r\n            toast.notify(`Invalid quantity, max order quantity is : ${maxQty}`, {\r\n                type: \"error\",\r\n                title: \"Error!!!\"\r\n            })\r\n        } else {\r\n            let item = { id: product.id, quantity: qty, slug: product.slug }\r\n            let cartData = []\r\n            if (config.cart) {\r\n                let itemIncart = config.cart.filter(ci => ci.id === product.id)\r\n                if (itemIncart.length > 0) {\r\n                    cartData = config.cart.map(ci => {\r\n                        if (ci.id === product.id) {\r\n                            ci.quantity = qty\r\n                            return ci\r\n                        }\r\n\r\n                        return ci\r\n                    })\r\n                } else {\r\n                    cartData.push(item)\r\n                }\r\n            } else {\r\n                cartData.push(item)\r\n            }\r\n\r\n            dispatch({ type: \"ADD_TO_CART\", payload: cartData })\r\n            toast.notify(`Added to cart`, {\r\n                type: \"success\",\r\n                title: \"Success!!!\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ToastContainer />\r\n            {\r\n                props.iscartpage ?\r\n                    (<Fragment>\r\n                        <div className=\"check_qu_1\">\r\n                            <div className=\"number-input md-number-input\">\r\n                                <p>Quantity</p>\r\n                                <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                <input className=\"quantity\" min=\"1\" value={qty} onChange={(e) => setQuantity(e.target.value)} name=\"quantity\" type=\"number\" />\r\n                                <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>)\r\n                    : (\r\n                        <Fragment>\r\n                            {\r\n                                product.stockStatus ? (<div className=\"number-input md-number-input\" key={product.id}>\r\n                                    <p>Quantity</p>\r\n                                    <button className=\"minus\" onClick={() => setQuantity(qty - step)}></button>\r\n                                    <input className=\"quantity\" min=\"1\" value={qty} onChange={(e) => setQuantity(e.target.value)} name=\"quantity\" type=\"number\" />\r\n                                    <button className=\"plus\" onClick={() => setQuantity(qty + step)}></button>\r\n                                </div>) : (\r\n                                        <div className=\"number-input md-number-input\">\r\n                                            <h2>Out of Stock</h2>\r\n                                        </div>\r\n                                    )\r\n                            }\r\n                            {\r\n                                product.stockStatus !== 0 &&\r\n                                <Fragment>\r\n                                    <button type=\"button\" className=\"bag_bttn\" onClick={addProductToCart}>Add to Bag</button>\r\n                                    <button className=\"hard_icon\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i></button>\r\n                                </Fragment>\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n            }\r\n        </Fragment>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}