{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\paycard\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport CForm from './components/form';\nimport Card from './components/card';\nconst initialState = {\n  cardNumber: '#### #### #### ####',\n  cardHolder: 'FULL NAME',\n  cardMonth: '',\n  cardYear: '',\n  cardCvv: '',\n  isCardFlipped: false\n};\n\nconst MainScreen = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState(initialState);\n  const {\n    0: currentFocusedElm,\n    1: setCurrentFocusedElm\n  } = useState(null);\n  const updateStateValues = useCallback((keyName, value) => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [keyName]: value || initialState[keyName]\n    }));\n  }, [state]); // References for the Form Inputs used to focus corresponding inputs.\n\n  let formFieldsRefObj = {\n    cardNumber: useRef(),\n    cardHolder: useRef(),\n    cardDate: useRef(),\n    cardCvv: useRef()\n  };\n  let focusFormFieldByKey = useCallback(key => {\n    formFieldsRefObj[key].current.focus();\n  }); // This are the references for the Card DIV elements.\n\n  let cardElementsRef = {\n    cardNumber: useRef(),\n    cardHolder: useRef(),\n    cardDate: useRef()\n  };\n\n  let onCardFormInputFocus = (_event, inputName) => {\n    const refByName = cardElementsRef[inputName];\n    setCurrentFocusedElm(refByName);\n  };\n\n  let onCardInputBlur = useCallback(() => {\n    setCurrentFocusedElm(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(CForm, {\n      cardMonth: state.cardMonth,\n      cardYear: state.cardYear,\n      onUpdateState: updateStateValues,\n      cardNumberRef: formFieldsRefObj.cardNumber,\n      cardHolderRef: formFieldsRefObj.cardHolder,\n      cardDateRef: formFieldsRefObj.cardDate,\n      onCardInputFocus: onCardFormInputFocus,\n      onCardInputBlur: onCardInputBlur,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        cardNumber: state.cardNumber,\n        cardHolder: state.cardHolder,\n        cardMonth: state.cardMonth,\n        cardYear: state.cardYear,\n        cardCvv: state.cardCvv,\n        isCardFlipped: state.isCardFlipped,\n        currentFocusedElm: currentFocusedElm,\n        onCardElementClick: focusFormFieldByKey,\n        cardNumberRef: cardElementsRef.cardNumber,\n        cardHolderRef: cardElementsRef.cardHolder,\n        cardDateRef: cardElementsRef.cardDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\nexport default MainScreen;","map":{"version":3,"sources":["D:/Projects/client/src/components/paycard/index.js"],"names":["React","useState","useRef","useCallback","CForm","Card","initialState","cardNumber","cardHolder","cardMonth","cardYear","cardCvv","isCardFlipped","MainScreen","state","setState","currentFocusedElm","setCurrentFocusedElm","updateStateValues","keyName","value","formFieldsRefObj","cardDate","focusFormFieldByKey","key","current","focus","cardElementsRef","onCardFormInputFocus","_event","inputName","refByName","onCardInputBlur"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport CForm from './components/form';\nimport Card from './components/card';\n\nconst initialState = {\n    cardNumber: '#### #### #### ####',\n    cardHolder: 'FULL NAME',\n    cardMonth: '',\n    cardYear: '',\n    cardCvv: '',\n    isCardFlipped: false\n};\n\nconst MainScreen = () => {\n    const [state, setState] = useState(initialState);\n    const [currentFocusedElm, setCurrentFocusedElm] = useState(null);\n\n    const updateStateValues = useCallback(\n        (keyName, value) => {\n            setState({\n                ...state,\n                [keyName]: value || initialState[keyName]\n            });\n        },\n        [state]\n    );\n\n    // References for the Form Inputs used to focus corresponding inputs.\n    let formFieldsRefObj = {\n        cardNumber: useRef(),\n        cardHolder: useRef(),\n        cardDate: useRef(),\n        cardCvv: useRef()\n    };\n\n    let focusFormFieldByKey = useCallback((key) => {\n        formFieldsRefObj[key].current.focus();\n    });\n\n    // This are the references for the Card DIV elements.\n    let cardElementsRef = {\n        cardNumber: useRef(),\n        cardHolder: useRef(),\n        cardDate: useRef()\n    };\n\n    let onCardFormInputFocus = (_event, inputName) => {\n        const refByName = cardElementsRef[inputName];\n        setCurrentFocusedElm(refByName);\n    };\n\n    let onCardInputBlur = useCallback(() => {\n        setCurrentFocusedElm(null);\n    }, []);\n\n    return (\n        <div className=\"wrapper\">\n            <CForm\n                cardMonth={state.cardMonth}\n                cardYear={state.cardYear}\n                onUpdateState={updateStateValues}\n                cardNumberRef={formFieldsRefObj.cardNumber}\n                cardHolderRef={formFieldsRefObj.cardHolder}\n                cardDateRef={formFieldsRefObj.cardDate}\n                onCardInputFocus={onCardFormInputFocus}\n                onCardInputBlur={onCardInputBlur}\n            >\n                <Card\n                    cardNumber={state.cardNumber}\n                    cardHolder={state.cardHolder}\n                    cardMonth={state.cardMonth}\n                    cardYear={state.cardYear}\n                    cardCvv={state.cardCvv}\n                    isCardFlipped={state.isCardFlipped}\n                    currentFocusedElm={currentFocusedElm}\n                    onCardElementClick={focusFormFieldByKey}\n                    cardNumberRef={cardElementsRef.cardNumber}\n                    cardHolderRef={cardElementsRef.cardHolder}\n                    cardDateRef={cardElementsRef.cardDate}\n                ></Card>\n            </CForm>\n        </div>\n    );\n};\n\nexport default MainScreen;\n"]},"metadata":{},"sourceType":"module"}