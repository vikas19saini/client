{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\paymentMethods.js\";\nimport { useEffect, useState } from \"react\";\nimport CardPayment from \"../components/paycard/index\";\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nexport default function PaymentMethod(props) {\n  let currency = useSelector(state => state.config.currency);\n  const {\n    0: paymentMethod,\n    1: setPaymentMethod\n  } = useState(null);\n  const amountToPay = parseFloat((props.amount * currency.value).toFixed(2));\n  const {\n    0: orderId,\n    1: setOrderId\n  } = useState(null);\n  const {\n    0: isError,\n    1: setIsError\n  } = useState(false);\n  useEffect(() => {\n    if (paymentMethod === \"bank\" && document.getElementById(\"cardForm\")) {\n      document.getElementById(\"cardForm\").scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [paymentMethod]);\n  useEffect(() => {\n    if (props.amount !== 0) {\n      let request = {\n        shippingAddressId: props.shippingAddress.id,\n        currencyCode: currency.code,\n        currencyValue: currency.value,\n        shippingCharges: parseFloat(props.shippingMethod.cost.toFixed(2)),\n        shipingService: props.shippingMethod.serviceName,\n        amount: parseFloat(props.amount.toFixed(2))\n      };\n      axios.post(`${process.env.API_URL}orders`, request).then(res => {\n        console.log(res);\n        setIsError(false);\n      }).catch(err => {\n        console.log(err);\n        setIsError(true);\n      });\n    }\n  }, [props.amount]);\n\n  const onSuccess = payment => {\n    console.log(payment);\n  };\n\n  const onError = err => {\n    console.log(err);\n  };\n\n  const onCancel = data => {\n    console.log(data);\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dis_detail blockBorder\",\n    id: \"paymentMethods\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"p0\",\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"seperator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paymentMethod\",\n            onClick: () => setPaymentMethod(\"bank\"),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"radio-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"ritem\",\n                onChange: () => setPaymentMethod(\"bank\"),\n                value: \"bank\",\n                checked: paymentMethod === \"bank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Credit or debit card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), paymentMethod === \"bank\" && /*#__PURE__*/_jsxDEV(CardPayment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paymentMethod\",\n            onClick: () => setPaymentMethod(\"paypal\"),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"radio-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                onChange: () => setPaymentMethod(\"paypal\"),\n                value: \"paypal\",\n                checked: paymentMethod === \"paypal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Paypal express checkout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), paymentMethod === \"paypal\" && /*#__PURE__*/_jsxDEV(PaypalExpressBtn, {\n            client: {\n              sandbox: \"AVqcfq3E-ODuZ1IfzPWB6famglBPiyHOBxVV0WTsIkkf_fDOM84Im006OuyiqATkr_O88kJIQeZWtP-6\"\n            },\n            currency: currency.code,\n            total: amountToPay,\n            style: {\n              size: 'responsive',\n              color: 'gold',\n              shape: 'pill',\n              label: 'pay',\n              tagline: true,\n              fundingicons: true\n            },\n            onCancel: onCancel,\n            onError: onError,\n            onSuccess: onSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/Projects/client/src/components/paymentMethods.js"],"names":["useEffect","useState","CardPayment","PaypalExpressBtn","useSelector","axios","PaymentMethod","props","currency","state","config","paymentMethod","setPaymentMethod","amountToPay","parseFloat","amount","value","toFixed","orderId","setOrderId","isError","setIsError","document","getElementById","scrollIntoView","behavior","request","shippingAddressId","shippingAddress","id","currencyCode","code","currencyValue","shippingCharges","shippingMethod","cost","shipingService","serviceName","post","process","env","API_URL","then","res","console","log","catch","err","onSuccess","payment","onError","onCancel","data","sandbox","size","color","shape","label","tagline","fundingicons"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport CardPayment from \"../components/paycard/index\";\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nexport default function PaymentMethod(props) {\r\n    let currency = useSelector(state => state.config.currency);\r\n    const [paymentMethod, setPaymentMethod] = useState(null);\r\n    const amountToPay = parseFloat((props.amount * currency.value).toFixed(2));\r\n    const [orderId, setOrderId] = useState(null);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (paymentMethod === \"bank\" && document.getElementById(\"cardForm\")) {\r\n            document.getElementById(\"cardForm\").scrollIntoView({\r\n                behavior: \"smooth\"\r\n            })\r\n        }\r\n    }, [paymentMethod])\r\n\r\n    useEffect(() => {\r\n        if (props.amount !== 0) {\r\n            let request = {\r\n                shippingAddressId: props.shippingAddress.id,\r\n                currencyCode: currency.code,\r\n                currencyValue: currency.value,\r\n                shippingCharges: parseFloat(props.shippingMethod.cost.toFixed(2)),\r\n                shipingService: props.shippingMethod.serviceName,\r\n                amount: parseFloat(props.amount.toFixed(2)),\r\n            }\r\n            axios.post(`${process.env.API_URL}orders`, request).then((res) => {\r\n                console.log(res)\r\n                setIsError(false);\r\n            }).catch(err => {\r\n                console.log(err);\r\n                setIsError(true);\r\n            });\r\n        }\r\n    }, [props.amount])\r\n\r\n    const onSuccess = (payment) => {\r\n        console.log(payment)\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log(err)\r\n    }\r\n\r\n    const onCancel = (data) => {\r\n        console.log(data)\r\n    }\r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <div className=\"dis_detail blockBorder\" id=\"paymentMethods\">\r\n            <div>\r\n                <h4 className=\"p0\">Payment Method</h4>\r\n            </div>\r\n            <hr className=\"seperator\" />\r\n            <div className=\"center-block\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-12\">\r\n                        <div className=\"paymentMethod\" onClick={() => setPaymentMethod(\"bank\")}>\r\n                            <span className=\"radio-item\">\r\n                                <input type=\"radio\" name=\"ritem\" onChange={() => setPaymentMethod(\"bank\")} value=\"bank\" checked={(paymentMethod === \"bank\")} />\r\n                                <label>Credit or debit card</label>\r\n                            </span>\r\n                        </div>\r\n                        {\r\n                            (paymentMethod === \"bank\") && (<CardPayment />)\r\n                        }\r\n                        <div className=\"paymentMethod\" onClick={() => setPaymentMethod(\"paypal\")}>\r\n                            <span className=\"radio-item\">\r\n                                <input type=\"radio\" name=\"paymentMethod\" onChange={() => setPaymentMethod(\"paypal\")} value=\"paypal\" checked={(paymentMethod === \"paypal\")} />\r\n                                <label>Paypal express checkout</label>\r\n                            </span>\r\n                        </div>\r\n                        {\r\n                            (paymentMethod === \"paypal\") && (<PaypalExpressBtn client={{\r\n                                sandbox: \"AVqcfq3E-ODuZ1IfzPWB6famglBPiyHOBxVV0WTsIkkf_fDOM84Im006OuyiqATkr_O88kJIQeZWtP-6\"\r\n                            }} currency={currency.code} total={amountToPay} style={{\r\n                                size: 'responsive',\r\n                                color: 'gold',\r\n                                shape: 'pill',\r\n                                label: 'pay',\r\n                                tagline: true,\r\n                                fundingicons: true\r\n                            }} onCancel={onCancel} onError={onError} onSuccess={onSuccess} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}