{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Projects\\\\client\\\\src\\\\components\\\\paymentMethods.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport CardPayment from \"../components/paycard/index\";\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nexport default function PaymentMethod(props) {\n  _s();\n\n  var currency = useSelector(function (state) {\n    return state.config.currency;\n  });\n\n  var _useState = useState(null),\n      paymentMethod = _useState[0],\n      setPaymentMethod = _useState[1];\n\n  var amountToPay = parseFloat((props.amount * currency.value).toFixed(2));\n\n  var _useState2 = useState(null),\n      orderId = _useState2[0],\n      setOrderId = _useState2[1];\n\n  var _useState3 = useState(false),\n      isError = _useState3[0],\n      setIsError = _useState3[1];\n\n  useEffect(function () {\n    if (paymentMethod === \"bank\" && document.getElementById(\"cardForm\")) {\n      document.getElementById(\"cardForm\").scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [paymentMethod]);\n  useEffect(function () {\n    console.log(props);\n    var request = {\n      shippingAddressId: props.shippingAddress.id,\n      currencyCode: currency.code,\n      currencyValue: currency.value,\n      shipingCost: props.shippingMethod.cost,\n      shipingService: props.shippingMethod.serviceName,\n      amount: amountToPay\n    };\n    axios.post(\"\".concat(process.env.API_URL, \"orders\"), request).then(function (res) {\n      console.log(res);\n      setIsError(false);\n    })[\"catch\"](function (err) {\n      console.log(err);\n      setIsError(true);\n    });\n  }, []);\n\n  var saveOrder = function saveOrder() {};\n\n  var onSuccess = function onSuccess(payment) {\n    console.log(payment);\n  };\n\n  var onError = function onError(err) {\n    console.log(err);\n  };\n\n  var onCancel = function onCancel(data) {\n    console.log(data);\n  };\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dis_detail blockBorder\",\n    id: \"paymentMethods\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"p0\",\n        children: \"Payment Method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"seperator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-block\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 col-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paymentMethod\",\n            onClick: function onClick() {\n              return setPaymentMethod(\"bank\");\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"radio-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"ritem\",\n                onChange: function onChange() {\n                  return setPaymentMethod(\"bank\");\n                },\n                value: \"bank\",\n                checked: paymentMethod === \"bank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Credit or debit card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), paymentMethod === \"bank\" && /*#__PURE__*/_jsxDEV(CardPayment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 60\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"paymentMethod\",\n            onClick: function onClick() {\n              return setPaymentMethod(\"paypal\");\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"radio-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"paymentMethod\",\n                onChange: function onChange() {\n                  return setPaymentMethod(\"paypal\");\n                },\n                value: \"paypal\",\n                checked: paymentMethod === \"paypal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Paypal express checkout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), paymentMethod === \"paypal\" && /*#__PURE__*/_jsxDEV(PaypalExpressBtn, {\n            client: {\n              sandbox: \"AVqcfq3E-ODuZ1IfzPWB6famglBPiyHOBxVV0WTsIkkf_fDOM84Im006OuyiqATkr_O88kJIQeZWtP-6\"\n            },\n            currency: currency.code,\n            total: amountToPay,\n            style: {\n              size: 'responsive',\n              color: 'gold',\n              shape: 'pill',\n              label: 'pay',\n              tagline: true,\n              fundingicons: true\n            },\n            onCancel: onCancel,\n            onError: onError,\n            onSuccess: onSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PaymentMethod, \"r3Vj0mFCHoFhqtaPoiOvq73sYpk=\", false, function () {\n  return [useSelector];\n});\n\n_c = PaymentMethod;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentMethod\");","map":{"version":3,"sources":["D:/Projects/client/src/components/paymentMethods.js"],"names":["useEffect","useState","CardPayment","PaypalExpressBtn","useSelector","axios","PaymentMethod","props","currency","state","config","paymentMethod","setPaymentMethod","amountToPay","parseFloat","amount","value","toFixed","orderId","setOrderId","isError","setIsError","document","getElementById","scrollIntoView","behavior","console","log","request","shippingAddressId","shippingAddress","id","currencyCode","code","currencyValue","shipingCost","shippingMethod","cost","shipingService","serviceName","post","process","env","API_URL","then","res","err","saveOrder","onSuccess","payment","onError","onCancel","data","sandbox","size","color","shape","label","tagline","fundingicons"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport CardPayment from \"../components/paycard/index\";\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nexport default function PaymentMethod(props) {\r\n    let currency = useSelector(state => state.config.currency);\r\n    const [paymentMethod, setPaymentMethod] = useState(null);\r\n    const amountToPay = parseFloat((props.amount * currency.value).toFixed(2));\r\n    const [orderId, setOrderId] = useState(null);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (paymentMethod === \"bank\" && document.getElementById(\"cardForm\")) {\r\n            document.getElementById(\"cardForm\").scrollIntoView({\r\n                behavior: \"smooth\"\r\n            })\r\n        }\r\n    }, [paymentMethod])\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        let request = {\r\n            shippingAddressId: props.shippingAddress.id,\r\n            currencyCode: currency.code,\r\n            currencyValue: currency.value,\r\n            shipingCost: props.shippingMethod.cost,\r\n            shipingService: props.shippingMethod.serviceName,\r\n            amount: amountToPay\r\n        }\r\n        axios.post(`${process.env.API_URL}orders`, request).then((res) => {\r\n            console.log(res)\r\n            setIsError(false);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            setIsError(true);\r\n        })\r\n    }, [])\r\n\r\n    const saveOrder = () => {\r\n\r\n    }\r\n\r\n    const onSuccess = (payment) => {\r\n        console.log(payment)\r\n    }\r\n\r\n    const onError = (err) => {\r\n        console.log(err)\r\n    }\r\n\r\n    const onCancel = (data) => {\r\n        console.log(data)\r\n    }\r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <div className=\"dis_detail blockBorder\" id=\"paymentMethods\">\r\n            <div>\r\n                <h4 className=\"p0\">Payment Method</h4>\r\n            </div>\r\n            <hr className=\"seperator\" />\r\n            <div className=\"center-block\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 col-12\">\r\n                        <div className=\"paymentMethod\" onClick={() => setPaymentMethod(\"bank\")}>\r\n                            <span className=\"radio-item\">\r\n                                <input type=\"radio\" name=\"ritem\" onChange={() => setPaymentMethod(\"bank\")} value=\"bank\" checked={(paymentMethod === \"bank\")} />\r\n                                <label>Credit or debit card</label>\r\n                            </span>\r\n                        </div>\r\n                        {\r\n                            (paymentMethod === \"bank\") && (<CardPayment />)\r\n                        }\r\n                        <div className=\"paymentMethod\" onClick={() => setPaymentMethod(\"paypal\")}>\r\n                            <span className=\"radio-item\">\r\n                                <input type=\"radio\" name=\"paymentMethod\" onChange={() => setPaymentMethod(\"paypal\")} value=\"paypal\" checked={(paymentMethod === \"paypal\")} />\r\n                                <label>Paypal express checkout</label>\r\n                            </span>\r\n                        </div>\r\n                        {\r\n                            (paymentMethod === \"paypal\") && (<PaypalExpressBtn client={{\r\n                                sandbox: \"AVqcfq3E-ODuZ1IfzPWB6famglBPiyHOBxVV0WTsIkkf_fDOM84Im006OuyiqATkr_O88kJIQeZWtP-6\"\r\n                            }} currency={currency.code} total={amountToPay} style={{\r\n                                size: 'responsive',\r\n                                color: 'gold',\r\n                                shape: 'pill',\r\n                                label: 'pay',\r\n                                tagline: true,\r\n                                fundingicons: true\r\n                            }} onCancel={onCancel} onError={onError} onSuccess={onSuccess} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}